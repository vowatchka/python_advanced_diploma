variables:
  PYTHON_IMAGE: python:3.9-slim
  POSTGRES_IMAGE: postgres:15.2-alpine
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  WORK_DIR: ./tweetty
  POSTGRES_DB: test_db
  POSTGRES_USER: test
  POSTGRES_PASSWORD: test
  POSTGRES_URL: "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB"

image: $PYTHON_IMAGE

cache:
  key:
    files:
      - ./requirements.txt
  paths:
    - .cache/pip

before_script:
  - python --version  # for debug
  - python -m pip install --upgrade pip setuptools wheel
  - python -m pip install -r requirements.txt

stages:
  - lint
  - test
  - release
  - deploy
  - rollback

linting:
  stage: lint
  script:
    - chmod +x ./lint.sh
    - ./lint.sh $WORK_DIR
  only:
    - main
    - master
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\d+\.\d+\.\d+/

testing:
  stage: test
  services:
    - $POSTGRES_IMAGE
  script:
    - pytest -v --color=yes $WORK_DIR
  only:
    - main
    - master
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\d+\.\d+\.\d+/

release:
  stage: release
  before_script:
    # degug
    - echo $GITLAB_CI
    # install git
    - apt-get update -y
    - apt-get install -y git
    # setup git
    - git config --local user.name "semantic-release"
    - git config --local user.email "semantic-release"
    - git switch $CI_COMMIT_BRANCH
    # remove unused tags
    - git tag -d $(git tag -l)
    - git pull
    # install python-semantic-release
    - python -m pip install --upgrade pip setuptools wheel
    - python -m pip install python-semantic-release~=7.34
  script:
    # semantic-release выполняет поиск коммитов от головного
    # до самого раннего нового коммита, но при этом не вкючая
    # коммиты слияния. Как следствие, коммит слияния не будет
    # учтен при вычислении новой версии.
    - semantic-release publish -v INFO
  only:
    - main
    - master
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\d+\.\d+\.\d+/

deploy:
  stage: deploy
  variables:
    GIT_REF: $CI_COMMIT_SHORT_SHA
  before_script:
    # see https://dokku.com/docs/deployment/methods/git/#initializing-from-private-repositories
    - command -v ssh-agent > /dev/null || (apt-get update -y && apt-get install openssh-client -y)
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh-keyscan -H -p 22 "192.168.1.35" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh dokku@192.168.1.35 "dokku git:sync --build tweetty git@$CI_SERVER_SHELL_SSH_HOST:python_advanced_diploma/tweetty.git $GIT_REF"
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"
      when: manual
    - if: ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master") && $CI_COMMIT_MESSAGE =~ /^\d+\.\d+\.\d+/
      when: manual

rollback:
  extends: deploy
  stage: rollback
  variables:
    GIT_REF: $CI_COMMIT_BEFORE_SHA
